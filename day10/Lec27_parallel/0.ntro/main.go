//Немного общих слов

//Go из коробки - язык конкурентный , а не параллельный.

// 1. Что такое конкурентность?
// Конкурентность - это подвид многопоточного исоплнения программ, где различные задачи ("работники") конкурируют за ресурсы.
// Конкурентность навязывается различными факторами :
// * приорететы исполнения
// * простой ресурсов
// * ручная передача

// 2. Пример конкурентности
// Екатерина бегает утром. Во время пробеки развязываются шнурки. Екатерина останавливается. Завязывает шнурки.
// Затем продолжает пробеку.
// Это классический пример конкурентности.

// 3. А параллелизм?
// Параллелизм - это подвид многопоточного исполнения программ, в котором множество задач ("работников") используют ресурсы ОДНОВРЕМЕННО.

// 4. Пример параллелизма
// Екатерина также бегает по утрам. Но в этот раз она еще и слушает музыку. В этот раз Екатерина ОДНОВРЕМЕННО и бегает и слушает музыку.

// 5. В чем разница и что лучше?
// Рассмотрим простой пример - браузер.
// Когжа мы заходим на какую-нибудь страницу : должно быть выполнено 2 действия
// * загрузка html страницы (файла)
// * отрисовка (рендеринг) в окне браузера

// Если данные задачи выполняются конкуретно, то сначала вы загрузите необходимый объем файлов , а уже затем выполните отрисовку.
// Процессор в этой ситуации будет осуществлять переключение контекста (context switch) в нужный момент (по завершении загрузки) и
// результат будет ожидаем.

// С другой стороны, если бы эти 2 задачи выполнялись параллельно, результат был бы немного шокирующим и непредсказуемым.

// 6. Как реализована конкуретность в языке?
// В Go поддержк конкуретности реализована с исползованием под-программ (со-программ) , т.н. "горутин" (или corutines/gorutines)

//7 . Горутина, это кто?
// Горутина - это фукнция или метод, которая запускает другие функции/методы или выполняет какие-то действия.
// Горутина , с технической точки зрения, может восприниматься как легковесный тред. На одном системном потоке может одновременно
// находиться огромное количество конкурирующих за ресурсы горутин.

// 8. Преимущества горутин над классическими тредами
// * горутина легковесная (размер горутины в миллионы раз меньше, чем размер классического треда в С++/Java)
// * исопльзование большого количество горутин занимает меньшее количество потоков ОС (в отличе от Java/C++, где отдельный тред
// требует выделения отдельного потока в ОС)
// * горутины могут общатсья друг с другом используя каналы